server.port=${SERVER_PORT:9090}

spring.application.name=chatbot-poc
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# OpenAI Configuration
openai.api-key=${OPENAI_API_KEY}
openai.api-url=${OPENAI_API_URL:https://api.openai.com/v1}

# Pinecone Configuration
pinecone.api-key=${PINECONE_API_KEY}
pinecone.api-url=${PINECONE_API_URL}
pinecone.index-name=${PINECONE_INDEX_NAME}
pinecone.environment=${PINECONE_ENVIRONMENT}
pinecone.project-id=${PINECONE_PROJECT_ID}

# AWS Configuration (using IAM role for production)
aws.region=${AWS_REGION:us-east-1}
spring.cloud.aws.credentials.use-default-aws-credentials-chain=true
spring.cloud.aws.stack.auto=false

# AWS DynamoDB Configuration
aws.dynamodb.users-table=${AWS_DYNAMODB_USERS_TABLE:chatbot-users}
aws.dynamodb.knowledge-table=${AWS_DYNAMODB_KNOWLEDGE_TABLE:chatbot-knowledge}
aws.dynamodb.conversations-table=${AWS_DYNAMODB_CONVERSATIONS_TABLE:chatbot-conversations}
aws.dynamodb.messages-table=${AWS_DYNAMODB_MESSAGES_TABLE:chatbot-messages}

# AWS S3 Configuration
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME:chatbot-knowledge-files}
aws.s3.region=${AWS_REGION:us-east-1}

# AWS SQS Configuration
aws.sqs.knowledge-processing-queue=${AWS_SQS_QUEUE:knowledge-processing-queue}
aws.sqs.region=${AWS_REGION:us-east-1}

# Logging
logging.level.com.example.chatbot=INFO
logging.level.org.springframework.web=INFO

# Spring Boot DevTools Configuration (disabled to avoid ClassLoader issues)
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false
